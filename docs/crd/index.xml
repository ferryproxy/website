<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CRD on Ferry Proxy</title><link>https://ferryproxy.io/docs/crd/</link><description>Recent content in CRD on Ferry Proxy</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://ferryproxy.io/docs/crd/index.xml" rel="self" type="application/rss+xml"/><item><title>Hub</title><link>https://ferryproxy.io/docs/crd/hub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ferryproxy.io/docs/crd/hub/</guid><description>Hub # Hub CR defines a Hub, which is the address to communicate with other Hubs, For now only one cluster is supported, in the future it will be added to support any possible device as a Hub, even your laptop
Hub provides the basis for RoutePolicy CR and Route CR calculations
apiVersion: traffic.ferryproxy.io/v1alpha2 kind: Hub metadata: name: hub-name namespace: ferry-system spec: gateway: # Reachable indicates that this Hub is reachable reachable: true # Address is the address of this Hub, used when Reachable is true address: 1.</description></item><item><title>MCS API</title><link>https://ferryproxy.io/docs/crd/mcs_api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ferryproxy.io/docs/crd/mcs_api/</guid><description>MCS API # This is the set of APIs defined in [kubernetes-sigs/mcs-api][1
Ferry will get the ServiceExport and ServiceImport CRs from all Hub CRs clusters that have the mcs.traffic.ferryproxy.io/service=enabled label. Get their ServiceExport and ServiceImport CRs, convert them to RoutePolicy CR, so that they are compatible with the mcs api</description></item><item><title>Route</title><link>https://ferryproxy.io/docs/crd/route/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ferryproxy.io/docs/crd/route/</guid><description>Route # Route CR Define a routing rules for individual services between hubs
apiVersion: traffic.ferryproxy.io/v1alpha2 kind: Route metadata: name: route-name namespace: ferry-system spec: export: hubName: cluster-1 service: namespace: default name: app-1 import: hubName: cluster-0 service: namespace: default name: app-1 The example CR describes Hub cluster-1 exporting Service app-1.default, importing it in Hub cluster-0 and naming it app-1.default The name and namespace of the import and export do not have to be the same</description></item><item><title>Route Policy</title><link>https://ferryproxy.io/docs/crd/route_policy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ferryproxy.io/docs/crd/route_policy/</guid><description>Route Policy # RoutePolicy is used to define generic composite routing rules, which will eventually convert to Route CR
Explicit Route # One-to-one import # apiVersion: traffic.ferryproxy.io/v1alpha2 kind: RoutePolicy metadata: name: policy-name namespace: ferry-system spec: exports: - hubName: cluster-1 service: namespace: default name: app-1 imports: - hubName: cluster-0 service: namespace: default name: app-1 This is a CR equivalent to the Route CR example
Import from multiple Hubs # apiVersion: traffic.</description></item></channel></rss>